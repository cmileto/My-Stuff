using System;using System.Collections.Generic;using Server.ContextMenus;using Server.Mobiles;using Server.Multis;using Server.Network;using Server.Accounting;using System.Linq;
namespace Server.Items{    public class BaseContainer : Container    {  private StringBuilder _stringBuilder;
        [Constructable]        public CreatureBackpack(string name)        {            Name = name;ItemID = 7;            Hue = 5;            Weight = 3.0;  _stringBuilder = new StringBuilder();        }
        public BaseContainer(Serial serial)            : base(serial)        {        }
        public override int DefaultMaxWeight        {            get            {                if (Movable)                    return 0;
                return 5;            }        }
  
 public override bool IsAccessibleTo(Mobile m)        {            if (!BaseHouse.CheckAccessible(m, this))                return false;
            return base.IsAccessibleTo(m);        }
                public override bool TryDropItem(Mobile from, Item dropped, bool sendFullMessage)        {  BaseHouse house = BaseHouse.FindHouseAt(this);
            if (house == null & !house.IsLockedDown(this)  )            {
 } else if( dropped is GargishRune ) {  RuneBuilder(item);  return true;
 return false;        }
        public override bool OnDragDropInto(Mobile from, Item item, Point3D p)        {             BaseHouse house = BaseHouse.FindHouseAt(this);
            if (house == null & !house.IsLockedDown(this)  )            {
 } else if( dropped is GargishRune ) {  RuneBuilder(item);  return true;
 return false;        }
       
     
        public override void OnDoubleClick(Mobile from)        {            if (from.IsStaff() || RootParent is PlayerVendor ||                (from.InRange(GetWorldLocation(), 2) && (Parent != null || (Z >= from.Z - 8 && Z <= from.Z + 16))))            {                Open(from); //TODO  from.SendGump            }            else            {                from.LocalOverheadMessage(MessageType.Regular, 0x3B2, 1019045); // I can't reach that.            }        }
   public void RuneBuilder( Item item ) {   if (item.ItemID == 0x483B) { _stringBuilder.Append( "a"); }   else if (objs.rune.ItemID == 0x483E) { strings.incantation += b }   else if (objs.rune.ItemID == 0x4841) { strings.incantation += ch }   else if (objs.rune.ItemID == 0x4844) { strings.incantation += d }   else if (objs.rune.ItemID == 0x4847) { strings.incantation += e }   else if (objs.rune.ItemID == 0x484A) { strings.incantation += f }   else if (objs.rune.ItemID == 0x484D) { strings.incantation += g }   else if (objs.rune.ItemID == 0x4850) { strings.incantation += h }   else if (objs.rune.ItemID == 0x4853) { strings.incantation += i }   else if (objs.rune.ItemID == 0x4856) { strings.incantation += j }   else if (objs.rune.ItemID == 0x4859) { strings.incantation += gl }   else if (objs.rune.ItemID == 0x485C) { strings.incantation += k }   else if (objs.rune.ItemID == 0x485F) { strings.incantation += l }   else if (objs.rune.ItemID == 0x4862) { strings.incantation += m }   else if (objs.rune.ItemID == 0x4865) { strings.incantation += ng }   else if (objs.rune.ItemID == 0x4868) { strings.incantation += n }   else if (objs.rune.ItemID == 0x486B) { strings.incantation += p }   else if (objs.rune.ItemID == 0x486E) { strings.incantation += r }   else if (objs.rune.ItemID == 0x4871) { strings.incantation += sh }   else if (objs.rune.ItemID == 0x4874) { strings.incantation += s }   else if (objs.rune.ItemID == 0x4877) { strings.incantation += t }   else if (objs.rune.ItemID == 0x487A) { strings.incantation += u }   else if (objs.rune.ItemID == 0x487D) { strings.incantation += v }   else if (objs.rune.ItemID == 0x4880) { strings.incantation += zh }   else if (objs.rune.ItemID == 0x4883) { strings.incantation += z }
 }/////////////////////////////////////////  OnResponse  
  SENDTARGET(TRIGMOB(), false)  SENDMSG(TRIGMOB(), "Target the item you would like to imbue the runes upon. BEWARE! An invalid runic combination is deadly (and makes you lose the runes!)")
  if (IS(TARGETED(), BaseArmor))  {  if (TARGETED().LootType == Blessed) { SENDMSG(TRIGMOB(), "The runes don't appear to work with blessed items!"); return }  if (STRING(TARGETED().Slayer2) != None) { SENDMSG(TRIGMOB(), "That armor has no room for more runes!"); return }  if (TARGETED().RootParentEntity != TRIGMOB()) { SENDMSG(TRIGMOB(), "That must be in your backpack to imbue it!"); return }  if (DISTANCE(TRIGMOB(), THIS()) > 1) { SENDMSG(TRIGMOB(), "You must be next to the workbench to continue!"); return }  if (THIS().xmlints.working != null) { SENDMSG(TRIGMOB(), "Somebody else is working with that right now.") }    /*  if ( _stringBuilder.ToString() == "alan")  {   if (STRING(TARGETED().Slayer) == None) { TARGETED().Slayer = LizardmanSlaughter }   else { TARGETED().Slayer2 = LizardmanSlaughter }  }  else if (strings.incantation == "punt")   { if (STRING(TARGETED().Slayer) == None) { TARGETED().Slayer = ReptilianDeath } else { TARGETED().Slayer2 = ReptilianDeath}  }  else if (strings.incantation == "bakr")   { if (STRING(TARGETED().Slayer) == None) { TARGETED().Slayer = Exorcism } else { TARGETED().Slayer2 = Exorcism}  }  else if (strings.incantation == "nechra") { if (STRING(TARGETED().Slayer) == None) { TARGETED().Slayer = Silver } else { TARGETED().Slayer2 = Silver}  }  else if (strings.incantation == "gash") { if (STRING(TARGETED().Slayer) == None) { TARGETED().Slayer = ElementalBan } else { TARGETED().Slayer2 = ElementalBan}  }  else if (strings.incantation == "fihla") { if (STRING(TARGETED().Slayer) == None) { TARGETED().Slayer = ArachnidDoom } else { TARGETED().Slayer2 = ArachnidDoom}  }  else if (strings.incantation == "kligle") { if (STRING(TARGETED().Slayer) == None) { TARGETED().Slayer = Repond } else { TARGETED().Slayer2 = Repond}  }  else if (strings.incantation == "muta") { if (STRING(TARGETED().Slayer) == None) { TARGETED().Slayer = Terathan } else { TARGETED().Slayer2 = Terathan}  }  else if (strings.incantation == "nganl") { if (STRING(TARGETED().Slayer) == None) { TARGETED().Slayer = DragonSlaying } else { TARGETED().Slayer2 = DragonSlaying}  }  else if (strings.incantation == "zhajd") { if (STRING(TARGETED().Slayer) == None) { TARGETED().Slayer = DaemonDismissal } else { TARGETED().Slayer2 = DaemonDismissal}  }  else if (strings.incantation == "ves") { if (STRING(TARGETED().Slayer) == None) { TARGETED().Slayer = OrcSlaying } else { TARGETED().Slayer2 = OrcSlaying}  }  else if (strings.incantation == "kihl") { if (STRING(TARGETED().Slayer) == None) { TARGETED().Slayer = Ophidian } else { TARGETED().Slayer2 = Ophidian}  }  else if (strings.incantation == "vang") { if (STRING(TARGETED().Slayer) == None) { TARGETED().Slayer = BalronDamnation } else { TARGETED().Slayer2 = BalronDamnation}  }  else if (strings.incantation == "chez") { if (STRING(TARGETED().Slayer) == None) { TARGETED().Slayer = GargoylesFoe } else { TARGETED().Slayer2 = GargoylesFoe}  }  else if (strings.incantation == "klech") { if (STRING(TARGETED().Slayer) == None) { TARGETED().Slayer = OgreTrashing } else { TARGETED().Slayer2 = OgreTrashing}  }  else if (strings.incantation == "dir") { if (STRING(TARGETED().Slayer) == None) { TARGETED().Slayer = TrollSlaughter } else { TARGETED().Slayer2 = TrollSlaughter}  }  else if (strings.incantation == "mar") { if (STRING(TARGETED().Slayer) == None) { TARGETED().Slayer = Fey } else { TARGETED().Slayer2 = Fey}  }  else if (strings.incantation == "nge") { if (STRING(TARGETED().Slayer) == None) { TARGETED().Slayer = SpidersDeath } else { TARGETED().Slayer2 = SpidersDeath}  }  else if (strings.incantation == "gle") { if (STRING(TARGETED().Slayer) == None) { TARGETED().Slayer = ScorpionsBane } else { TARGETED().Slayer2 = ScorpionsBane}  }  else if (strings.incantation == "ba") { if (STRING(TARGETED().Slayer) == None) { TARGETED().Slayer = FlameDousing } else { TARGETED().Slayer2 = FlameDousing}  }  else if (strings.incantation == "ti") { if (STRING(TARGETED().Slayer) == None) { TARGETED().Slayer = WaterDissipation } else { TARGETED().Slayer2 = WaterDissipation}  }  else if (strings.incantation == "fa") { if (STRING(TARGETED().Slayer) == None) { TARGETED().Slayer = Vacuum } else { TARGETED().Slayer2 = Vacuum}  }  else if (strings.incantation == "pnl") { if (STRING(TARGETED().Slayer) == None) { TARGETED().Slayer = ElementalHealth } else { TARGETED().Slayer2 = ElementalHealth}  }  else if (strings.incantation == "zhu") { if (STRING(TARGETED().Slayer) == None) { TARGETED().Slayer = EarthShatter } else { TARGETED().Slayer2 = EarthShatter}  }  else if (strings.incantation == "shu") { if (STRING(TARGETED().Slayer) == None) { TARGETED().Slayer = BloodDrinking } else { TARGETED().Slayer2 = BloodDrinking}  }  else if (strings.incantation == "mi") { if (STRING(TARGETED().Slayer) == None) { TARGETED().Slayer = SummerWind } else { TARGETED().Slayer2 = SummerWind}  }  else if (strings.incantation == "nra") { if (STRING(TARGETED().Slayer) == None) { TARGETED().Slayer = SnakesBane } else { TARGETED().Slayer2 = SnakesBane}  }  else if (strings.incantation == "nga") { if (STRING(TARGETED().Slayer) == None) { TARGETED().Slayer = LizardmanSlaughter } else { TARGETED().Slayer2 = LizardmanSlaughter}  }  */       
      
        public override void Serialize(GenericWriter writer)        {            base.Serialize(writer);
        }
        public override void Deserialize(GenericReader reader)        {            base.Deserialize(reader);
        }    }
}
